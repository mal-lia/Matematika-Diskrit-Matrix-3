# -*- coding: utf-8 -*-
"""Penugasan Matematika Diskrit (MATRIKS 03) Kelas A_24083010034 (Aisyah Amalia Hamid).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cAjrOu6jfjDEkSxgXOh79G9Dbm25Ck5p

# **Matematika Diskrit**

Pada tugas ini, pembuktian dilakukan dengan bantuan Python untuk **memastikan pemahaman konsep sekaligus menambahkan analisis detail.** Terdapat dua pernyataan matematika yang diuji, yaitu:
1. Ekspresi n^2 - n selalu dapat dibagi habis oleh (n-1).
2. Jumlah deret harmonik Hn = 1+ 1/2 + 1/3 + ... + 1/n akan lebih kecil dari 2 hingga batas tertentu.

## **Nomor 01 (Soal Kejepit)**

**(1) Pembuktian divisibilitas dengan Python**

Mengecek apakah ekspresi n^2 - n = n(n -1) akan selalu habis dibagi oleh (n-1).
"""

def cek_divisible(n_max=20):
    for n in range(2, n_max+1):  # mulai dari 2 biar (n-1) ≠ 0
        expr = n**2 - n
        if expr % (n-1) == 0:
            print(f"n={n}: {expr} / (n-1) = {expr//(n-1)} (habis dibagi)")

cek_divisible()

""">Program menggunakan loop dari beberapa nilai
n
≥
2
dan menampilkan hasil bagi tiap perhitungan.

>Output menunjukkan bahwa untuk semua nilai
n, ekspresi tersebut memang habis dibagi.

## **Nomor 02 (Soal Kejepit)**

**(2) Hitung jumlah deret harmonik sampai < 2**

Membuat fungsi untuk menghitung jumlah deret harmonik:

Hn = 1 + 1/2 + 1/3 + ... + 1/n < 2
"""

def harmonic_sum(limit=20):
    total = 0
    for n in range(1, limit+1):
        total += 1/n
        print(f"n={n}, H_n={total:.6f}")
        if total >= 2:
            print(f"\n>>> Pertama kali melewati 2 di n={n}, H_n={total:.6f}")

harmonic_sum()

""">Program menampilkan nilai Hn secara bertahap sampai pertama kali melewati 2.

>Ditemukan bahwa deret harmonik < 2 hanya berlaku hingga n = 3, dan mulai dari n = 4, jumlahnya sudah melampaui 2.

**(2) Hitung simpangan dari 2**

Simpangan = |2 - Hn|.

Kita cek untuk n = 3 (masih <2) dan n = 4 (sudah >2)
"""

def simpangan():
    H3 = sum(1/i for i in range(1, 4))  # n=3
    H4 = sum(1/i for i in range(1, 5))  # n=4
    print(f"Simpangan n=3: 2 - H3 = {2-H3:.6f}")
    print(f"Simpangan n=4: H4 - 2 = {H4-2:.6f}")

simpangan()

""">Program menghitung selisih nilai Hn terhadap angka 2, baik dari bawah (2 - H3) maupun dari atas (H4 - 2).

>Perhitungan simpangan memnjelaskan batas titik transisi ketika deret harmonik melewati angka 2.

# **Kesimpulan:**

**1. Pembuktian Divisibilitas**
Untuk mengecek kebenaran pernyataan pertama, digunakan Python untuk menghitung nilai n^2 - n kemudian dibagi dengan (n-1) untuk beberapa nilai n ≥ 2.

Hasil eksekusi program menunjukkan bahwa hasil bagi **selalu berupa bilangan bulat.** Yang membuktikan n^2 - n = n(n - 1) memang selalu habis dibagi oleh (n -1).

>TERBUKTI BENAR


---


**2. Analisis Deret Harmonik**
Selanjutnya, terdapat fungsi untuk menghitung jumlah deret harmonik Hn. Nilai deret akan ditambahkan secara bertahap mulai dari n = 1 dan ditampilkan setiap langkah-langkahnya.

Dari hasil perhitungan:
* Pada n = 3, nilai deret harmonik < 2.
* Pada n = 4, jumlah deret > 2.

Sehingga, dapat disimpulkan batas terakhir deret harmonik nilai Hn < 2 terjadi pada n = 3.

**Simpangan Dari Angka 2**
Untuk memperjelas proses, dilakukan perhitungan selisih (simpangan) antara Hn dan angka 2. Sehingga:
* Saat n = 3, simpangan dari bawah adalah 2 - H3.
* Saat n = 4, simpangan dari atas adalah H4 -2.
"""